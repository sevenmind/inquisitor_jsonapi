name: check

on: [pull_request, push]

jobs:
  mix_check:
    name: mix check (Elixir ${{matrix.elixir}}, OTP ${{matrix.otp}})

    strategy:
      matrix:
        include:
          - elixir: '1.11.4'
            otp: '23.2.7'
          # - elixir: '1.7.4'
          #   otp: '20.3.8'

    runs-on: ubuntu-20.04
    env:
      POSTGRES_HOST: localhost
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache Elixir deps
        uses: actions/cache@v2
        with:
          path: deps
          key: elixir-deps-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            elixir-deps-${{ runner.os }}-
      - name: Fetch Elixir deps
        run: mix deps.get

      - name: Cache Elixir build
        uses: actions/cache@v2
        with:
          path: _build
          key: elixir-build-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}-${{ hashFiles('lib/**/*.ex', 'config/*.exs', 'mix.exs') }}
          restore-keys: |
            elixir-build-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}-
            elixir-build-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-
      - name: Compile Elixir deps
        run: mix deps.compile

      - name: Initalize Staging Database
        env: 
          MIX_ENV: test
        run: mix ecto.init

      - name: Run check
        run: mix check